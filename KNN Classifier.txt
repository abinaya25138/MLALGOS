import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn

#
dataset = pd.read_csv("D:\Data Sets\Social_Network_Ads.csv")
X = dataset.iloc[:, [1, 2, 3]].values
y = dataset.iloc[:, -1].values

y

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
X[:,0] = le.fit_transform(X[:,0])


from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)

#feature scaling to the training and test set of independent variables for reducing the size to smaller values
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#Now we have to create and train the K Nearest Neighbor model with the training set
 

from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'euclidean' )
classifier.fit(X_train, y_train)

#Our Model is created, now we have to predict the output for the test set
y_pred = classifier.predict(X_test)


y_test


y_pred


#We can evaluate our model using the confusion matrix and accuracy score by comparing the predicted and actual test values
from sklearn.metrics import confusion_matrix,accuracy_score
cm = confusion_matrix(y_test, y_pred)
ac = accuracy_score(y_test,y_pred)

cm

ac